"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.watchMigrationsDir = exports.createWatchManager = void 0;
const chokidar_1 = __importDefault(require("chokidar"));
const path_1 = __importDefault(require("path"));
const check_sql_utils_1 = require("../rules/check-sql.utils");
function createWatchManager() {
    const watchers = new Map();
    return {
        watchMigrationsDir: (params) => watchMigrationsDir(params, watchers),
    };
}
exports.createWatchManager = createWatchManager;
function watchMigrationsDir(params, watchers) {
    var _a;
    const migrationsPath = path_1.default.join(params.projectDir, params.connection.migrationsDir);
    if (watchers.has(migrationsPath)) {
        return;
    }
    const { databaseUrl } = (0, check_sql_utils_1.getMigrationDatabaseMetadata)({
        connectionUrl: (_a = params.connection.connectionUrl) !== null && _a !== void 0 ? _a : check_sql_utils_1.DEFAULT_CONNECTION_URL,
        databaseName: (0, check_sql_utils_1.getDatabaseName)({
            databaseName: params.connection.databaseName,
            migrationsDir: params.connection.migrationsDir,
            projectDir: params.projectDir,
        }),
    });
    const watcher = chokidar_1.default.watch(migrationsPath, { ignoreInitial: true }).on("all", () => {
        params.dropCacheKeyFn(databaseUrl);
        params.closeConnectionFn({ connection: params.connection, projectDir: params.projectDir });
    });
    watchers.set(migrationsPath, watcher);
}
exports.watchMigrationsDir = watchMigrationsDir;
//# sourceMappingURL=watch-manager.js.map